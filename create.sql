-- Generated by Oracle SQL Developer Data Modeler 19.4.0.350.1424
--   at:        2020-05-18 00:10:42 EEST
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE building (
    building_id      NUMBER(7) NOT NULL,
    country          VARCHAR2(100 CHAR) NOT NULL,
    city             VARCHAR2(100 CHAR) NOT NULL,
    street           VARCHAR2(200 CHAR) NOT NULL,
    building_number  VARCHAR2(10) NOT NULL
);

ALTER TABLE building ADD CONSTRAINT building_pk PRIMARY KEY ( building_id );

ALTER TABLE building
    ADD CONSTRAINT building_address_un UNIQUE ( building_number,
                                                street,
                                                city );

CREATE TABLE city (
    city     VARCHAR2(100 CHAR) NOT NULL,
    country  VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE city ADD CONSTRAINT city_pk PRIMARY KEY ( city,
                                                      country );

CREATE TABLE conference_hall (
    building_id  NUMBER(7) NOT NULL,
    hall_number  NUMBER(5) NOT NULL
);

ALTER TABLE conference_hall ADD CONSTRAINT conference_hall_pk PRIMARY KEY ( building_id,
                                                                            hall_number );

CREATE TABLE country (
    country VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE country ADD CONSTRAINT country_pk PRIMARY KEY ( country );

CREATE TABLE person (
    person_name  VARCHAR2(100 CHAR) NOT NULL,
    passport_id  VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE person ADD CONSTRAINT person_pk PRIMARY KEY ( passport_id );

CREATE TABLE rating (
    rating_name VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE rating ADD CONSTRAINT rating_pk PRIMARY KEY ( rating_name );

CREATE TABLE speech_audience (
    person_id    VARCHAR2(10 CHAR) NOT NULL,
    speech_name  VARCHAR2(200 CHAR) NOT NULL
);

ALTER TABLE speech_audience ADD CONSTRAINT speech_audience_pk PRIMARY KEY ( person_id,
                                                                            speech_name );

CREATE TABLE speech_author (
    speech_name  VARCHAR2(200 CHAR) NOT NULL,
    person_id    VARCHAR2(10 CHAR) NOT NULL
);

ALTER TABLE speech_author ADD CONSTRAINT speech_author_pk PRIMARY KEY ( speech_name,
                                                                        person_id );

CREATE TABLE speech_rating (
    rating_name   VARCHAR2(30 CHAR) NOT NULL,
    curr_date     DATE NOT NULL,
    rating_value  NUMBER(6) NOT NULL,
    speech_name   VARCHAR2(200 CHAR) NOT NULL
);

ALTER TABLE speech_rating ADD CONSTRAINT speech_rating_pk PRIMARY KEY ( rating_name,
                                                                        curr_date );

CREATE TABLE street (
    street   VARCHAR2(200 CHAR) NOT NULL,
    city     VARCHAR2(100 CHAR) NOT NULL,
    country  VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE street
    ADD CONSTRAINT street_pk PRIMARY KEY ( street,
                                           city,
                                           country );

CREATE TABLE tedevent (
    event VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE tedevent ADD CONSTRAINT tedevent_pk PRIMARY KEY ( event );

CREATE TABLE tedtalk (
    speech_name  VARCHAR2(200 CHAR) NOT NULL,
    description  CLOB,
    event        VARCHAR2(100 CHAR) NOT NULL
);

ALTER TABLE tedtalk ADD CONSTRAINT tedtalk_pk PRIMARY KEY ( speech_name );

CREATE TABLE tedtalk_organized (
    speech_name   VARCHAR2(200 CHAR) NOT NULL,
    building_id   NUMBER(7) NOT NULL,
    hall_number   NUMBER(5) NOT NULL,
    speech_date   DATE NOT NULL,
    duration_sec  NUMBER(7)
);

ALTER TABLE tedtalk_organized ADD CONSTRAINT speech_location_time_pk PRIMARY KEY ( speech_name );

CREATE TABLE video (
    publisher_id  VARCHAR2(10 CHAR) NOT NULL,
    url           VARCHAR2(200 CHAR) NOT NULL,
    speech_name   VARCHAR2(200 CHAR) NOT NULL
);

ALTER TABLE video ADD CONSTRAINT video_pk PRIMARY KEY ( url );

CREATE TABLE video_views (
    url        VARCHAR2(200 CHAR) NOT NULL,
    curr_date  DATE NOT NULL,
    views      NUMBER(10) NOT NULL
);

ALTER TABLE video_views ADD CONSTRAINT video_views_pk PRIMARY KEY ( url,
                                                                    curr_date );

ALTER TABLE conference_hall
    ADD CONSTRAINT "Building-Conference_Hall" FOREIGN KEY ( building_id )
        REFERENCES building ( building_id );

ALTER TABLE street
    ADD CONSTRAINT "City-Street" FOREIGN KEY ( city,
                                               country )
        REFERENCES city ( city,
                          country );

ALTER TABLE city
    ADD CONSTRAINT "Country-City" FOREIGN KEY ( country )
        REFERENCES country ( country );

ALTER TABLE tedtalk_organized
    ADD CONSTRAINT "Hall-TEDTalk_Arranged" FOREIGN KEY ( building_id,
                                                         hall_number )
        REFERENCES conference_hall ( building_id,
                                     hall_number );

ALTER TABLE video
    ADD CONSTRAINT person_video FOREIGN KEY ( publisher_id )
        REFERENCES person ( passport_id );

ALTER TABLE speech_audience
    ADD CONSTRAINT "Person-Speech_Audience" FOREIGN KEY ( person_id )
        REFERENCES person ( passport_id );

ALTER TABLE speech_author
    ADD CONSTRAINT "Person-Speech_Author" FOREIGN KEY ( person_id )
        REFERENCES person ( passport_id );

ALTER TABLE speech_rating
    ADD CONSTRAINT "Rating-Speech_Rating" FOREIGN KEY ( rating_name )
        REFERENCES rating ( rating_name );

ALTER TABLE speech_audience
    ADD CONSTRAINT "Sp_Audience-TEDTalk_Arranged" FOREIGN KEY ( speech_name )
        REFERENCES tedtalk_organized ( speech_name );

ALTER TABLE building
    ADD CONSTRAINT "Street-Building" FOREIGN KEY ( street,
                                                   city,
                                                   country )
        REFERENCES street ( street,
                            city,
                            country );

ALTER TABLE tedtalk
    ADD CONSTRAINT "TEDEvent-TEDTalk" FOREIGN KEY ( event )
        REFERENCES tedevent ( event );

ALTER TABLE speech_rating
    ADD CONSTRAINT "TEDTalk_Arranged-Speech_Rating" FOREIGN KEY ( speech_name )
        REFERENCES tedtalk_organized ( speech_name );

ALTER TABLE speech_author
    ADD CONSTRAINT "TEDTalk-Speech_Author" FOREIGN KEY ( speech_name )
        REFERENCES tedtalk ( speech_name );

ALTER TABLE tedtalk_organized
    ADD CONSTRAINT "TEDTalk-TEDTalk_Arranged" FOREIGN KEY ( speech_name )
        REFERENCES tedtalk ( speech_name );

ALTER TABLE video
    ADD CONSTRAINT video_ted_arranged FOREIGN KEY ( speech_name )
        REFERENCES tedtalk_organized ( speech_name );

ALTER TABLE video_views
    ADD CONSTRAINT "Video-Video_Views" FOREIGN KEY ( url )
        REFERENCES video ( url );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             0
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

----------------------------------------------------------------------
-- умова завдання на тригер:
-- під час додавання даних до таблиці Video_Views перевіряє, чи заповнене поле дата.
-- якщо ні -- ставиться поточна дата.

CREATE OR REPLACE TRIGGER Video_Views_Insert_Trig
    BEFORE INSERT
    ON Video_Views
    FOR EACH ROW
    
    BEGIN
            IF :new.curr_date IS NULL THEN
                :new.curr_date := SYSDATE;
            END IF;
            
    END;
